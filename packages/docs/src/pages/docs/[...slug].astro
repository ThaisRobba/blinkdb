---
import { CollectionEntry, getCollection } from 'astro:content';
import DocsLayout from '../../layouts/DocsLayout.astro';
import { components } from "../../components/md/index.astro";

export async function getStaticPaths() {
  const entries = await getCollection('docs');
  return entries.map(entry => ({
    params: { slug: entry.slug !== "index" ? entry.slug : undefined },
    props: { entry, entries },
  }));
}

export interface Props {
  entry: CollectionEntry<"docs">;
  entries: CollectionEntry<"docs">[];
};

const { entry, entries } = Astro.props;
const { Content, headings } = await entry.render();

const sortAccordingTo = <T extends CollectionEntry<'docs'>>(entries: T[], order: (T['slug'][])): T[] => {
  const newEntries: T[] = [];
  for(const slug of order) {
    const entry = entries.find(e => e.slug === slug);
    newEntries.push(entry);
  }
  return newEntries;
}

const sortedEntries = sortAccordingTo(entries, [
  "index",
  "installation",
  "tables",
  "crud",
  "filters",
  "changes",
  "middleware"
]);
---

<DocsLayout bodyClassName="overflow-y-scroll" title={entry.data.title}>
  {sortedEntries.map(e => (
    <li slot="links" class="py-1"><a href={e.slug === "index" ? '/docs' : `/docs/${e.slug}`}>{e.data.title}</a></li>
  ))}

  <details slot="sidebar-left" open>
    <summary class="font-mono font-bold tracking-tight uppercase text-black dark:text-white cursor-pointer">Getting started</summary>
    <ul class="text-sm ml-3">
      {sortedEntries.map(e => (
        <li class="p-0.5"><a href={e.slug === "index" ? '/docs' : `/docs/${e.slug}`}>{e.data.title}</a></li>
      ))}
    </ul>
  </details>

  {headings.length > 3 && (
    <div slot="sidebar-right" class="text-sm">
      {headings.map(h => (
        <div class={["ml-0", "ml-2", "ml-4", "ml-6", "ml-8"].at(h.depth - 1) + " p-0.5"}>
          <a
            class={h.depth === 1 ? 'font-bold font-mono tracking-tight text-black dark:text-white' : ''}
            href={`${entry.slug === "index" ? '/docs' : `/docs/${entry.slug}`}#${h.slug}`}
          >{h.text}</a>
        </div>
      ))}
    </div>
  )}

  <Content components={components} />
</DocsLayout>