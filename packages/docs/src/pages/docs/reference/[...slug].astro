---
import { CollectionEntry, getCollection } from 'astro:content';
import DocsLayout from '../../../layouts/DocsLayout.astro';
import { components } from "../../../components/md/index.astro";
import Sticky from '../../../components/sticky.astro';
import CardLink from '../../../components/card-link.astro';
import Footer from '../../../components/footer.astro';
import MenuIcon from '../../../components/icons/menu-icon.astro';
import Hr from '../../../components/md/hr.astro';
import XIcon from '../../../components/icons/x-icon.astro';

export async function getStaticPaths() {
  const blogEntries = await getCollection('reference');
  return blogEntries.map(entry => ({
    params: { slug: entry.slug }, props: { entry, entries: blogEntries },
  }));
}

export interface Props {
  entry: CollectionEntry<"reference">;
  entries: CollectionEntry<"reference">[];
};

const { entry, entries } = Astro.props;
const { Content, headings } = await entry.render();
---

<DocsLayout bodyClassName="overflow-y-scroll" title={entry.data.title}>
  <div class="px-4 py-3 bg-dot-top from-white dark:from-gray-900 to-gray-100 dark:to-gray-800">
    <div class="hidden lg:flex gap-4">
      <CardLink href="/guides">Guides</CardLink>
      <CardLink href="/docs">Docs</CardLink>
      <CardLink href="/docs/reference">API</CardLink>
    </div>
    <div class="flex lg:hidden">
      <details class="w-full flex details-menu">
        <summary class="float-right list-none cursor-pointer">
          <MenuIcon data-menu="closed" class="w-8 h-10" />
          <XIcon data-menu="open" class="hidden w-8 h-10" />
        </summary>
        <div class="space-y-5">
          <div class="flex gap-4">
            <CardLink href="/guides">Guides</CardLink>
            <CardLink href="/docs">Docs</CardLink>
            <CardLink href="/docs/reference">API</CardLink>
          </div>
          <ul class="text-sm grid grid-cols-[repeat(auto-fill,minmax(140px,1fr))] w-full justify-center">
            {entries.map(e => (
              <li class="py-1"><a href={e.slug}>{e.data.title}</a></li>
            ))}
          </ul>
          <Hr />
        </div>
      </details>
    </div>
  </div>
  <div class="flex gap-6 justify-center items-start text-gray-700 dark:text-gray-300">
    <Sticky class="w-52 p-4 hidden lg:block">
      <details open>
        <summary class="font-mono font-bold tracking-tight uppercase text-black dark:text-white cursor-pointer">API</summary>
        <ul class="text-sm ml-3">
          {entries.map(e => (
            <li class="p-0.5"><a href={e.slug}>{e.data.title}</a></li>
          ))}
        </ul>
      </details>
    </Sticky>
    <div class="w-[min(100%,_80ch)] mb-24 p-4 space-y-5">
      <Content components={components} />
      <Footer class="!mt-20"/>
    </div>
    <Sticky class="w-52 p-4 hidden xl:block">
      {headings.length > 3 && (
        <div class="text-sm">
          {headings.map(h => (
            <div class={["ml-0", "ml-2", "ml-4", "ml-6", "ml-8"].at(h.depth - 1) + " p-0.5"}>
              <a class={h.depth === 1 ? 'font-bold font-mono tracking-tight text-black dark:text-white' : ''} href={`${entry.slug}#${h.slug}`}>{h.text}</a>
            </div>
          ))}
        </div>
      )}
    </Sticky>
  </div>
</DocsLayout>

<style>
  .details-menu[open] *[data-menu="closed"] {
    display: none;
  }
  .details-menu[open] *[data-menu="open"] {
    display: block;
  }
</style>